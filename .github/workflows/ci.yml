name: Continuous integration
on:
    push:
        branches:
            - main
            - cd-workflow  
        tags:
            - "!*" # Do not execute on tags
    pull_request:
        branches:
            - "**"

jobs:
    tests:
        defaults:
            run:
                shell: bash
                working-directory: src
                    
        strategy:
            matrix:
                version: ['3.7', '3.10.1']
            
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            # this provides built-in cache for poetry
            - uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.version }}
                  cache: 'poetry'

            - name: Install poetry
              run: pip install poetry==1.1.8

            - name: Install dependencies
              run: poetry install

            - run: cp project/emails.py.dist project/emails.py

            - name: Run tests
              run: INCLUDE_E2E=true poetry run coverage run --source='.' manage.py test workforce

            - name: Code climate
              uses: paambaati/codeclimate-action@v2.7.5
              env:
                  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
              with:
                  workingDirectory: src
                  coverageCommand: poetry run coverage xml
                  coverageLocations: ${{ github.workspace }}/src/coverage.xml:coverage.py
                      
    staging:
        needs: tests
        runs-on: ubuntu-latest
        environment: staging
        steps:
            - uses: actions/checkout@v2
              
            - uses: ./.github/actions/cd.yml
              with:
                environment_name: staging
                key: ${{ secrets.STAGING_SSH_KEY }} 
                hostname: ${{ secrets.STAGING_SSH_HOSTNAME }} 
                known_hosts: ${{ secrets.STAGING_SSH_KNOWN_HOSTS }} 
                config: ${{ secrets.STAGING_SSH_CONFIG }} 

    # production:
    #     needs: tests
    #     runs-on: ubuntu-latest
    #     if: github.ref_name == 'main'
    #     environment: production
    #     steps:
    #         - uses: actions/checkout@v2
    #           
    #         - uses: ./.github/actions/cd.yml
    #           with:
    #             environment: production
    #             key: ${{ secrets.PRODUCTION_SSH_KEY }} 
    #             hostname: ${{ secrets.PRODUCTION_SSH_HOSTNAME }} 
    #             known_hosts: ${{ secrets.PRODUCTION_SSH_KNOWN_HOSTS }} 
    #             config: ${{ secrets.PRODUCTION_SSH_CONFIG }} 
